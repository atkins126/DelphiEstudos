unit uRRTI;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
  TForm1 = class(TForm)
    Button1: TButton;
    Memo1: TMemo;
    SetValue: TButton;
    Eric: TEdit;
    procedure Button1Click(Sender: TObject);
    procedure SetValueClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation
  uses
    System.Rtti;

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
    vRttiContext : TRttiContext;
    vRttiType : TRttiType;
    vRttiProperty : TRttiProperty;

begin

   vRttiContext :=   TRttiContext.Create;
     try
      vRttiType := vRttiContext.GetType(Self.ClassType);

      for vRttiProperty in vRttiType.GetProperties do
      begin
        Memo1.Lines.Add(vRttiProperty.Name +' : '+ vRttiProperty.GetValue(Self).ToString);
      end;

     finally
       vRttiContext.Free;
     end;
end;

procedure TForm1.SetValueClick(Sender: TObject);
var
    vRttiContext : TRttiContext;
    vRttiType : TRttiType;
    vRttiField : TRttiField;
    Edit : TEdit;

begin

   vRttiContext :=   TRttiContext.Create;
     try
      vRttiType := vRttiContext.GetType(Self.ClassType);
      for vRttiField in vRttiType.GetFields do
      begin
        if vRttiField.Name = 'Edit1' then
        begin
          Edit := Self.FindComponent(vRttiField.Name) as TEdit;
          Edit.Text := Edit.Text;
        end;
      end;

     finally
       vRttiContext.Free;
     end;
end;

end.
